<?php
/**
 * @file
 * Install, update, and uninstall functions for the portal module.
 */

 /**
 * Implements hook_schema().
 */
function portal_schema() {
  $schema = array();

  $schema['portal_group'] = array(
  'description' => 'Portal group header.',

    'fields' => array(
      'portal_gid' => array(
        'description' => t('ID for individual groups.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),

      'portal_gstatus' => array(
        'description' => t('Status of the group, public, privet, hidden etc...'),
        'type' => 'int',
        'size' => 'small',
        'not null' => FALSE,
      ),

      'portal_gname' => array(
        'description' => t('Name of the groups.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
      ),

      'portal_gdesc' => array(
        'description' => t('Group description.'),
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),

      /* I've added the member count to the main datatable because it won't get
      updated constantly and it's one less thing to count when displaying the
      groups statistics. */
      'portal_gmemcount' => array(
        'description' => t('Membership count'),
        'type' => 'int',
        'size' => 'medium',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('portal_gid'),
    'indexes' => array(
      'portal_gid' => array('portal_gid'),
      'portal_gname' => array('portal_gname'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_entity_info().
 */
/* function portal_entity_info() {
  // Entity_info for the Portal Group table
  $return = array(
    'portal_group' => array(
      'label' => t('Portal Groups'),
      'entity class' => 'portal',
      'controller class' => 'PortalController',
      'base table' => 'portal_group',
      'fieldable' => TRUE,
      'uri callback' => 'portal_uri',
      'entity keys' => array(
        'id' => 'portal_gid',
        'bundle' => 'portal',
      ),
      'bundle keys' => array(
          'bundle' => 'portal',
        ),
      'static cache' => FALSE,
      'bundles' => array(
          'first_example_bundle' => array(
            'label' => 'First example bundle',
            // 'admin' key is used by the Field UI to provide field and
            // display UI pages.
            'admin' => array(
              'path' => 'admin/structure/portal/manage',
              'access arguments' => array('administer portal entities'),
            ),
          ),
        ),
    ),

  );

    return $return;
}
*/